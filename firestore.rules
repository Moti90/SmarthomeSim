rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Progress data - users can only access their own progress
    match /progress/{progressId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // User progress - users can only access their own progress
    match /user_progress/{progressId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Simulator data - users can only access their own data
    match /simulator/{simId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Learning data - users can only access their own data
    match /learning/{learningId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Learning progress - users can only access their own progress
    match /learning_progress/{progressId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Quiz results - users can access their own quiz results, teachers can read all
    match /quiz_results/{quizId} {
      // Users can read and write their own quiz results
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      // Teachers can read all quiz results (for dashboard)
      allow read: if request.auth != null;
    }
    
    // Rules - users can only access their own rules
    match /rules/{ruleId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Settings - users can only access their own settings
    match /settings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Schools - authenticated users only
    match /schools/{schoolId} {
      allow read, write: if request.auth != null;
    }
    
    // Classes - teachers can create/read/update, students can only read
    match /classes/{classId} {
      // Anyone can read class info (for joining)
      allow read: if request.auth != null;
      // Only teachers can create/update classes
      allow create, update: if request.auth != null && 
        request.auth.uid == resource.data.teacherId;
      // Teachers can delete their own classes
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.teacherId;
    }
    
    // Students - students can read/update their own data, teachers can read all students in their classes
    match /students/{studentId} {
      // Students can read and update their own data
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      // Teachers can read students in their classes
      allow read: if request.auth != null;
    }
    
    // Class enrollments - students can join classes, teachers can manage enrollments
    match /class_enrollments/{enrollmentId} {
      // Students can create their own enrollments
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      // Students can read their own enrollments
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // Teachers can read all enrollments for their classes
      allow read: if request.auth != null;
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
