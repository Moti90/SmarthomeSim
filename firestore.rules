rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Progress data - users can only access their own progress
    match /progress/{progressId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // User progress - allow teachers to read all progress for their classes
    match /user_progress/{progressId} {
      allow read: if true; // Allow teachers to read progress data (they use localStorage auth)
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Simulator data - users can only access their own data
    match /simulator/{simId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Learning data - users can only access their own data
    match /learning/{learningId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Rules - users can only access their own rules
    match /rules/{ruleId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Settings - users can only access their own settings
    match /settings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Schools - public read access, write for authenticated users
    match /schools/{schoolId} {
      allow read: if true; // Allow public read access
      allow write: if request.auth != null;
    }
    
    // Classes - public read and write access for teachers
    match /classes/{classId} {
      allow read, write: if true; // Allow public access for teachers
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
